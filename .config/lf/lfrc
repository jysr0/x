#~/.config/lf/lfrc

#install:--------------------------------------------------------------------------------------------------- 
#ctpv (clone it from github OR yay) 
#ffmpeg 
#ffmpegthumbnailer 
#ueberzug (don't install if you're going to use `ctpv`) 
#chafa (don't install if you're going to use `ctpv`)
#and for icons and colors see `lf wiki` in github
# the following are for ueberzug:
#ueberzug
#jq
#ouch
#poppler
#djvulibre
#pandoc
#lynx
#bat
#imagemagick
#ffmpegthumbnailer

#config order for changes to take effect (just a thought of mine):----------------------------------------------------
#OPTIONS
#CUSTOM COMMANDS
#DISABLED KEYBINDINGS
#COMMAND-LINE MODE KEYBINDINGS
#VISUAL MODE KEYBINDINGS
#NORMAL MODE KEYBINDINGS
#NORMAL/VISUAL MODE KEYBINDINGS

#NOTES:------------------------------------------------------------------------------------------------------
#key `l` won't open an empty file, use `e` instead and make sure $EDITOR environment variable is set to your favourite editor (nano or vim or whatever)
#<c-h> (control+h) in lf is concidered `backspace`, unknown why is so
#white spaces (space character) in file names are not recommended, reason is: probably won't open
#default keys of lf was copied into this file so easily can be modified when desired
#probably most frequently, keys that will be modified are noted by `#---` characters

#quick tutorial in this configuration only not lf's defaults:-------------------------------------------------
#`alt+h` show/hide hidden files
#`$` character to enter command line mode and then create file/directory using shell commands
#`j/k` for go down/up
#`h/l` for back/enter directories or files
#`y/d/p/X/r` for copy/cut/paste/delete/rename (for uppercase hold `shift`)
#`slash/?` to search forward/backward
#`control+f` to filter out files/directories
#`control+shift+y` to extract a compressed file
#for anything else see command `man lf`

# OPTIONS: ------------------------------------------------------------------------------------------------------
#previewer
# ctpv:
#set previewer ctpv
#set cleaner ctpvclear
#&ctpv -s $id
#&ctpvquit $id
# ueberzug:
#set previewer ~/.config/lf/previewer.sh
#set cleaner ~/.config/lf/cleaner.sh
# stpv:
set previewer stpv
set cleaner stpvimgclr
&stpvimg --listen $id
cmd on-quit $stpvimg --end $id

#icons
set icons true  # ~/.config/lf #------------------

set cursorpreviewfmt "\033[0m" #--------------------
set cursorparentfmt "\033[4;2m" #-----------------
set cursoractivefmt "\033[4m" #-------------------------
set selectfmt "\033[7;35m" #-------------------------------
set drawbox true #------------------
set roundbox true #-------------------
set borderfmt "\033[0m" #-------------------

set autoquit true
set dirpreviews true
set dupfilefmt "%n-(cp)_%f"
set filesep ' ' #\n #-------------------
set hidden false #----------------
set hiddenfiles '.*' #-----------------
set dircounts false
set info 'user:time:size'
set history true
set mouse false
#set number false #-----------
#set relativenumber true #-------------
#set numberfmt "\033[90m" #------------
set infotimefmtnew 'Jan _2 2006 15:04'
set infotimefmtold 'Jan _2 2006 15:04'
set timefmt 'Mon Jan _2 2006 15:04:05'
set period 0
set preview true
set promptfmt "\033[33m%u@%h:\033[0m\033[34m%d\033[0m%f\033[0m" #---------------
set ratios '1:3:2' #------------
#set reverse false
#set rulerfmt ""
#set statfmt ""
set tabstop 4
set truncatechar '~' #------------
set truncatepct 100
set ignorecase true
set ignoredia true
set incfilter true
set incsearch false
set searchmethod text
set showbinds true #------------
set smartcase true
set smartdia false
set sortby natural #-----------
set selmode all #selected files for lf commands mode
set wrapscan true
set wrapscroll false
set shell 'sh' 

# custom commands: ------------------------------------------------------------------------------------------------------------
#cmd open ${{
#        case $(file --mime-type -Lb $f) in
#            	#video/*) mpv $fx &;;
#            	text/*) $EDITOR $fx;;
#            	application/x-*) echo -e "$f" "\033[38:5:159m""'application cannot be handled in lf, use shell'""\033[0m" && sleep 1s && clear && exit 0;;
#            	
#		*) for f in $fx; do xdg-open $f > /dev/null 2> /dev/null & done;;
#        esac
#}}
cmd open ${{
        case $(file --mime-type -Lb $f) in
            	text/*) $EDITOR $fx;;
            	application/x-*) echo -e "$f" "\033[38:5:159m""'application cannot be handled in lf, use shell'""\033[0m" && sleep 1s && clear && exit 0;;
            	
		*) for f in $fx; do xdg-open  $f > /dev/null 2> /dev/null & done;;
        esac
}}

cmd trash ${{
	clear 
	set -f
	printf "%s, " "$fx"; printf "move to trash?[y/N]"
	[ -d "~/.trash" ] && mkdir ~/.trash
	read ans
	[ $ans = "y" ] && mv "$fx" ~/.trash
}}
map x 	trash

cmd extract ${{
	#clear; tput cup $(($(tput lines)/3)); tput bold
	clear
	set -f
	printf "%s, " "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && {
		case $fx in
			*.tar.bz2)   tar xjf $fx     ;;
			*.tar.gz)    tar xzf $fx     ;;
			*.bz2)       bunzip2 $fx     ;;
			*.rar)       unrar e $fx     ;;
			*.gz)        gunzip $fx      ;;
			*.tar)       tar xf $fx      ;;
			*.tbz2)      tar xjf $fx     ;;
			*.tgz)       tar xzf $fx     ;;
			*.zip)       unzip $fx       ;;
			*.Z)         uncompress $fx  ;;
			*.7z)        7z x $fx        ;;
			*.tar.xz)    tar xf $fx      ;;
		esac
	}
}}
map Y	extract

cmd bg ${{
	clear; set -f
	printf "%s, " "$f"; printf "set as wallpaper?[Y/n]"
	read ans
	[[ $ans == "n" ]] && exit
	#[[ $(file --mime-type -b $f) == "image/*" ]] && \
	xwallpaper --stretch $f && cp $f $XDG_CACHE_HOME/bg.jpg
}}
map b	bg

#disabled keybindings:------------------------------------------------------------------------
#normal/visual mode commands:
#map i
#map w
map <f-1>
map zh
map zr
map zn
map zs
map zt
map za
#map sn 
#map ss 
#map st 
#map sa 
#map sb 
#map sc 
#map se 
#map gh 
#normal mode commands:
nmap <home>
nmap <end>
#command-line mode commands:
cmap <end> 	
cmap <delete> 	
cmap <home>
#cmap <backspace2> 	
#cmap <a-backspace2> 	
#custom commands:
#cmd open
cmd doc
cmd maps
cmd nmaps
cmd vmaps
cmd cmaps
cmd cmds



# command-line mode keybindings: -------------------------------------------------------------------------------------------------
cmap <enter>	:cmd-enter #enter command-line mode
cmap <c-j>	:cmd-enter
cmap <esc>	:cmd-escape
cmap <tab>	:cmd-complete
cmap <c-c>	:cmd-interrupt #kill command
cmap <c-n>	:cmd-history-next
cmap <down>	:cmd-history-next
cmap <c-p>	:cmd-history-prev
cmap <up>	:cmd-history-prev
cmap <c-b>	:cmd-left #cursor left
cmap <left>	:cmd-left
cmap <c-f>	:cmd-right #cursor right
cmap <right>	:cmd-right
cmap <c-a>	:cmd-home #cursor at beginning of command
cmap <c-e>	:cmd-end #cursor at end of command
cmap <c-d>	:cmd-delete #delete next char
cmap <backspace>	:cmd-delete-back #delete prev char
cmap <backspace2>	:cmd-delete-back #delete prev char
cmap <c-u>	:cmd-delete-home #delete from current possition to beginning of command
cmap <c-k>	:cmd-delete-end #delete from current possition to end of command
cmap <c-w>	:cmd-delete-unix-word
cmap <c-y>	:cmd-yank
cmap <c-t>	:cmd-transpose #transpose last two characters
cmap <a-t>	:cmd-transpose-word #transpose last two words
cmap <a-f>	:cmd-word #jump to next word
cmap <c-right>	:cmd-word #jump to next word
cmap <a-b>	:cmd-word-back #jump to prev word
cmap <c-left>	:cmd-word-back #jump to prev word
cmap <a-d>	:cmd-delete-word #delete next word
cmap <a-backspace>	:cmd-delete-word-back #delete prev word
cmap <a-backspace2>	:cmd-delete-word-back #delete prev word
cmap <a-c>	:cmd-capitalize-word
cmap <a-u>	:cmd-uppercase-word
cmap <a-l>	:cmd-lowercase-word

# visual mode keybindings: ----------------------------------------------------------------------------------------
nmap v		:visual
vmap v 		:visual-accept #add selected file(s) to selection list and return to normal mode
vmap w 		:visual-unselect #remove selected file(s) from selection list and return to normal mode
vmap o 		:visual-change
vmap <esc> 	:visual-discard


# normal mode keybindings: ------------------------------------------------------------------------------------
nmap sr 	:set reverse! 
nmap sm 	:set sortby name #; set info 'user:time:size'

nmap q 		:quit

nmap k 		:up
nmap <up> 	:up

nmap j 		:down
nmap <down> 	:down

nmap <c-y> 	:scroll-up
nmap <pgdn> 	:scroll-up

nmap <c-e> 	:scroll-down
nmap <pgup> 	:scroll-down

nmap <c-u> 	:half-up
nmap <c-d> 	:half-down

nmap <c-b> 	:page-up
nmap <c-f> 	:page-down

nmap h 		:updir #go to parrent directory
nmap <left> 	:updir #go to parrent directory

nmap l 		:open
nmap <right> 	:open

nmap [ 		:jump-prev
nmap ] 		:jump-next

nmap sn 	:set sortby natural 
nmap ss 	:set sortby size 
nmap sa 	:set sortby atime 
nmap sb 	:set sortby btime 
nmap sc 	:set sortby ctime 
nmap se 	:set sortby ext 
nmap st 	:set sortby time 
	
nmap gg 	:top
nmap G 		:bottom

nmap H 		:high #go to highest dir/file list in current buffer
nmap M 		:middle #go to middle dir/file list in current buffer
nmap L 		:low #go to bottom dir/file list in current buffer

nmap <space> 	:toggle #toggle selected/unselected file(s)
nmap <c-a> 	:unselect; invert
nmap i 		:invert #selected file(s) becomes unselected and vice-versa
nmap u 		:unselect
nmap y 		:copy
nmap p 		:paste
nmap d 		:cut
nmap <a-h> 	:set hidden! #toggle hidden files
nmap c 		:clear
nmap r 		:rename
nmap X 		:delete

nmap <c-l> 	:redraw #refresh screen
nmap <c-r> 	:reload #reload screen for new files to appear if there is any


nmap ':' 		:read #reading lf commands not shell commands, as in vim
nmap '$' 		:shell #reading shell commands to execute
nmap '%' 		:shell-pipe #see `man lf at COMMANDS section`
nmap '!' 		:shell-wait #see `man lf at COMMANDS section`
nmap '&' 		:shell-async #see `man lf at COMMANDS section`

nmap f 		:find
nmap F 		:find-back
nmap ; 		:find-next
nmap , 		:find-prev
nmap / 		:search
nmap ? 		:search-back
nmap n 		:search-next
nmap N 		:search-prev
nmap <a-f> 	:filter #search file/directory that match pattern, also there is `setfilter` command

nmap m 		:mark-save #bookmark current dir and assign it to a given key
nmap ' 		:mark-load
nmap " 		:mark-remove
nmap t 		:tag-toggle #also there is `tag` command
nmap gh cd ~


# normal/visual mode keybindings: -------------------------------------------------------------------------------------
map e 		$$EDITOR "$f" #open text/* files

